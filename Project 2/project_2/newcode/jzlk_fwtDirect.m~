function [ y ] = jzlk_fwtDirect( x, hphi )
%UNTITLED Summary of this function goes here
%   h0 = hphi(-n), h1=hpsi(-n)
%   For perfect reconstruction: g0 = (-1)^n h1, g1=(-1)^{n+1}h0 p.493
%   h0 = hphi(-n), h1=hpsi(-n), g0(n) = h0(-n) = hphi(n)
%   g1(n) = h1(-n) = hpsi(n) p.521
%   hphi(n) = g0(n)
%
%   Incoming prototype is hphi(n) = g0(n)
%   Generate h0(n) = g0(-n)
%   Generate g1(n) = -1^{n+1} h0(n)
%   Generate h1(n) = g1(-n)

N = numel(x);

if mod(N,2)==1
    disp('Error: Length of input is odd.');
    return;
end

h0 = fliplr(hphi);

g1 = h0;
g1(1:2:end) = -g1(1:2:end); % sign flip

h1 = fliplr(g1);


% Filter
yHighOUT = conv(x, h1);%ifft(fft(x).*fft(h1, N));
yLowOUT = conv(x,h0); %ifft(fft(x).*fft(h0, N));

y = [yHighOUT(1:2:N/2) yLowOUT(1:2:numel(x)/2)];

end

